plugins {
    id 'nebula.netflixoss' version '3.6.4'
}

// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

apply plugin: 'osgi'
apply plugin: 'project-report'
apply plugin: 'maven-publish'

subprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'nebula.compile-api'

    repositories {
        jcenter()
    }
    group = "com.netflix.${githubProjectName}"

    dependencies {
        compileApi "joda-time:joda-time:2.3"
        compileApi "org.slf4j:slf4j-api:1.7.6"
        compileApi "org.slf4j:slf4j-log4j12:1.7.21"
        compileApi "com.googlecode.json-simple:json-simple:1.1"
        compileApi "org.apache.httpcomponents:httpclient:4.2.1"
        compileApi "com.sun.jersey:jersey-core:1.11"
        testCompile "junit:junit:4.11"
        testCompile "org.mockito:mockito-all:1.9.5"
        testCompile "io.netty:netty-all:4.1.14.Final"
    }

    project.tasks.withType(Javadoc) {
        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

}
project(':dyno-core') {
    apply plugin: 'osgi'
    apply plugin: 'project-report'
    
    dependencies {
        compileApi "org.apache.commons:commons-math:2.2"
        compileApi "org.apache.commons:commons-lang3:3.6"
        compileApi "commons-io:commons-io:2.4"
    }
}

project(':dyno-contrib') {
    apply plugin: 'osgi'
    apply plugin: 'project-report'
    
    dependencies {
        compileApi  project(':dyno-core')
        compileApi "com.google.inject:guice:4.1.0"
        compileApi "com.netflix.archaius:archaius-core:0.7.5"
        compileApi "com.netflix.servo:servo-core:0.12.17"
        compileApi 'com.netflix.eureka:eureka-client:1.8.1'
        compileApi 'org.apache.commons:commons-lang3:3.5'
        compileApi ('com.ecwid.consul:consul-api:1.2.1') {
            exclude group: 'org.apache.httpcomponents'
        }       
        testCompile 'com.pszymczyk.consul:embedded-consul:0.3.3'
    }
}

project(':dyno-memcache') {
    apply plugin: 'osgi'
    apply plugin: 'project-report'

    dependencies {
        compileApi  project(':dyno-core')
        compileApi  project(':dyno-contrib')
//        compileApi "net.spy:spymemcached:2.10.2+"
    }
}

project(':dyno-jedis') {
    apply plugin: 'osgi'
    apply plugin: 'project-report'

    dependencies {
        compileApi  project(':dyno-core')
        compileApi  project(':dyno-contrib')
        compileApi "redis.clients:jedis:2.9.0"
    }
}

project(':dyno-redisson') {
    apply plugin: 'osgi'
    apply plugin: 'project-report'

    dependencies {
        compileApi  project(':dyno-core')
        compileApi  project(':dyno-contrib')
        compileApi "org.redisson:redisson:1.1.0"
    }
}

project(':dyno-demo') {
    apply plugin: 'osgi'
    apply plugin: 'project-report'

    dependencies {
        compileApi  project(':dyno-core')
        compileApi  project(':dyno-contrib')
        compileApi  project(':dyno-memcache')
        compileApi  project(':dyno-jedis')
        compileApi  project(':dyno-recipes')
    }
}

project(':dyno-recipes') {
    apply plugin: 'osgi'
    apply plugin: 'project-report'

    dependencies {
        compileApi project(':dyno-core')
        compileApi project(':dyno-jedis')
    }
}
