plugins {
    id 'nebula.netflixoss' version '11.3.1'
    id "com.github.blindpirate.osgi" version "0.0.4"
}

// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

apply plugin: 'project-report'
apply plugin: 'maven-publish'

subprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'jacoco'
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        /**
         * This repository locates artifacts that don't exist in maven central but we had to backup from spinnaker/jcenter
         */
        exclusiveContent {
            forRepository {
                maven {
                    url "https://artifactory-oss.prod.netflix.net/artifactory/spinnaker"
                }
            }
            filter {
                includeGroupByRegex "com\\.netflix\\.spinnaker.*"
            }
        }
    }
    group = "com.netflix.${githubProjectName}"

    dependencies {
        implementation 'joda-time:joda-time:2.3'
        implementation 'org.slf4j:slf4j-api:1.7.6'
        implementation 'org.slf4j:slf4j-log4j12:1.7.21'
        implementation 'com.googlecode.json-simple:json-simple:1.1'
        implementation 'org.apache.httpcomponents:httpclient:4.2.1'
        implementation 'com.sun.jersey:jersey-core:1.11'
        testImplementation 'junit:junit:4.11'
        testImplementation 'org.mockito:mockito-all:1.9.5'
        testImplementation 'io.netty:netty-all:4.1.14.Final'
    }

    project.tasks.withType(Javadoc) {
        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    jacocoTestReport {
        reports {
            xml.required = false
            csv.required = false
            html.required = true
        }
    }

    test.finalizedBy(project.tasks.jacocoTestReport)
}

project(':dyno-core') {
    //apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        implementation 'org.apache.commons:commons-math:2.2'
        implementation 'org.apache.commons:commons-lang3:3.6'
        implementation 'commons-io:commons-io:2.4'
    }

    test {
        exclude '**/*'
    }
}

project(':dyno-contrib') {
//    apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        implementation project(':dyno-core')
        implementation 'com.google.inject:guice:4.1.0'
        implementation 'com.netflix.archaius:archaius-core:0.7.6'
        implementation 'com.google.code.findbugs:jsr305:3.0.1'
        implementation 'com.netflix.servo:servo-core:0.12.17'
        implementation 'com.netflix.eureka:eureka-client:1.8.6'
        implementation 'commons-lang:commons-lang:2.6'
        implementation 'org.apache.commons:commons-lang3:3.5'
        implementation 'org.codehaus.jettison:jettison:1.3.7'
        implementation('com.ecwid.consul:consul-api:1.2.1') {
            exclude group: 'org.apache.httpcomponents'
        }
        testImplementation  'com.pszymczyk.consul:embedded-consul:0.3.3'
    }
}

project(':dyno-memcache') {
//    apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        implementation project(':dyno-core')
        implementation project(':dyno-contrib')
    }
}

project(':dyno-jedis') {
//    apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        annotationProcessor 'org.projectlombok:lombok:1.18.4'
        implementation project(':dyno-core')
        implementation project(':dyno-contrib')
        implementation 'redis.clients:jedis:3.0.1'
        implementation  'org.projectlombok:lombok:1.18.4'
        testImplementation  'com.netflix.spinnaker.embedded-redis:embedded-redis:0.8.0'
    }
}

project(':dyno-client') {
//    apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        implementation project(':dyno-jedis')
    }
}


project(':dyno-redisson') {
   // apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        implementation project(':dyno-core')
        implementation project(':dyno-contrib')
        implementation 'org.redisson:redisson:1.1.0'
    }
}

project(':dyno-demo') {
  //  apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        implementation project(':dyno-core')
        implementation project(':dyno-contrib')
        implementation project(':dyno-memcache')
        implementation project(':dyno-jedis')
        implementation project(':dyno-recipes')
        implementation 'commons-cli:commons-cli:1.4'
    }
}

project(':dyno-recipes') {
  //  apply plugin: 'com.github.blindpirate.osgi'
    apply plugin: 'project-report'

    dependencies {
        annotationProcessor 'org.projectlombok:lombok:1.18.4'
        implementation project(':dyno-core')
        implementation project(':dyno-jedis')
        implementation 'com.google.code.gson:gson:2.8.5'
        implementation 'org.projectlombok:lombok:1.18.4'
        testImplementation  'com.netflix.spinnaker.embedded-redis:embedded-redis:0.8.0'
    }

    test {
        testLogging.showStandardStreams = true
    }
}
